type Chat {
    _id: ID!
    name: String!
    users: [User!]
}

type Query {
    findManyByUser(input: FindManyChatsInput): [Chat!]!
    findChatById(input: FindOneChatInput): Chat
}

type Mutation {
    createChat(input: CreateChatInput): Chat!
    updateChat(input: CreateChatInput): Chat!
    deleteChat(id: ID!): Chat
}

type Subscription {
    userAddedToChat(chatId: ID!): User!
    userRemovedFromChat(chatId: ID!): ID!
    messageAdded(chatId: ID!): Message
    messageEdited(chatId: ID!): Message!
    messageRemoved(chatId: ID!): MessageInfo!
}

input FindManyChatsInput {
    ids: [String!]
    includeMessages: Boolean
    includeUsers: Boolean
}

input FindOneChatInput {
    id: String!
    includeMessages: Boolean
    includeUsers: Boolean
}

input CreateChatInput {
    name: String!
    userIds: [String!]
}