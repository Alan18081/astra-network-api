type FriendshipRequest {
    _id: ID!
    sender: User!
    receiver: User!
    message: String
}

type Query {
    incomingFriendshipRequestsList: [FriendshipRequest!]!
    outgoingFriendshipRequestsList: [FriendshipRequest!]!
    friendshipRequest(id: ID!): FriendshipRequest
}

type Mutation {
    sendFriendshipRequest(input: CreateRequest): FriendshipRequest!
    deleteFriendshipRequest(id: ID!): Boolean
    acceptFriendshipRequest(id: ID!): Boolean
    declineFriendshipRequest(id: ID!): Boolean
}

type Subscription {
    requestSended: FriendshipRequest!
    requestAccepted: User!
}

input CreateRequest {
    receiverId: ID!
    message: String
}