type User {
    _id: String!
    firstName: String!
    lastName: String!
    email: String!
    age: Int
    googleId: String
    emailVerified: Boolean
    phoneVerified: Boolean
    online: Boolean
    friends: [User!]!
    notes: [Note]
    chats: [Chat]
}

type Query {
    users: [User!]!
    user(id: String): User
    profile: User!
    friends(userId: String!): [User!]!
}

type Mutation {
    createUser(input: CreateUserInput!): User!
    updateUser(id: String!, input: UpdateUserInput!): User!
    deleteUser(id: String!): Boolean
    addFriend(friendId: String!): Boolean
    removeFriend(friendId: String!): Boolean
    checkIsFriend(friendId: String!): Boolean
}

type Subscription {
    userStatusChanged(id: ID!): User!
}

input CreateUserInput {
    firstName: String!
    lastName: String!
    email: String!
    password: String!
}

input UpdateUserInput {
    firstName: String
    lastName: String
    age: Int
}